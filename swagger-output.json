{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "description": "Get Homepage",
        "responses": {
          "200": {
            "description": "Successfully retrieved homepage"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Sign in Page",
        "responses": {
          "200": {
            "description": "Login page retrieved successfully"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login with registered Email or Username and Password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/loginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You are logged in"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      }
    },
    "/auth/register": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Sign up Page",
        "responses": {
          "200": {
            "description": "Sign up page retrieved successfully"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Tp register enter FirstName, LastName, Username, Password, Address, Email and Telephone",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/signupInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created account"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      }
    },
    "/init/": {
      "get": {
        "tags": [
          "Utilities"
        ],
        "description": "Get init page",
        "responses": {
          "200": {
            "description": "Successfully retrieved init page"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Utilities"
        ],
        "description": "Populate data in the database",
        "responses": {
          "200": {
            "description": "Successfully populated database"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get all products",
        "responses": {
          "200": {
            "description": "Successfully retrieved all products"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Create a new product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a new product"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Edit an existing product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editProduct"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID number of a specific product",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the product"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/products/{productId}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Soft delete an existing product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID number of a specific product"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the product"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Get all categories",
        "responses": {
          "200": {
            "description": "Successfully retrieved all categories"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Create a new category",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a new category"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "description": "Edit an existing category",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editCategory"
            }
          },
          {
            "name": "CategoryId",
            "in": "path",
            "description": "ID number of a specific category",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the category"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/categories/{CategoryId}": {
      "delete": {
        "tags": [
          "Categories"
        ],
        "description": "Delete an existing category",
        "parameters": [
          {
            "name": "CategoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID number of a specific category"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the category"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/brands/": {
      "get": {
        "tags": [
          "Brands"
        ],
        "description": "Get all brands",
        "responses": {
          "200": {
            "description": "Successfully retrieved all brands"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      },
      "post": {
        "tags": [
          "Brands"
        ],
        "description": "Create a new brand",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a new brand"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Brands"
        ],
        "description": "Edit an existing brand",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editBrand"
            }
          },
          {
            "name": "BrandId",
            "in": "path",
            "description": "ID number of a specific brand",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the brand"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/brands/{BrandId}": {
      "delete": {
        "tags": [
          "Brands"
        ],
        "description": "",
        "parameters": [
          {
            "name": "BrandId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID number of a specific brand"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the brand"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/cart/": {
      "get": {
        "tags": [
          "Carts"
        ],
        "description": "Get all items in the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "path",
            "description": "ID number of a specific user",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all items in the cart"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Carts"
        ],
        "description": "Add an item to the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createCart"
            }
          },
          {
            "name": "ProductId",
            "in": "path",
            "description": "ID number of a specific product",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added item to the cart"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Carts"
        ],
        "description": "Update an item quantity in the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editCart"
            }
          },
          {
            "name": "CartId",
            "in": "path",
            "description": "ID number of a specific cart",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated cart item"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "description": "Soft delete an item from the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartId",
            "in": "path",
            "description": "ID number of a specific cart",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "cartId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted cart item"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/cart/checkout/now": {
      "post": {
        "tags": [
          "Carts"
        ],
        "description": "Checkout all items in the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "UserId",
            "in": "path",
            "description": "ID number of a specific user",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully placed order"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get all orders",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all orders"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Edit an existing order status",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editOrder"
            }
          },
          {
            "name": "OrderId",
            "in": "path",
            "description": "ID number of a specific order",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the orders status"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/search/": {
      "post": {
        "tags": [
          "Search"
        ],
        "description": "Search for products based on either or in combination of product name, brand name, and category name.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/searchProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a new brand"
          },
          "400": {
            "description": "Fail! Something went wrong"
          }
        }
      }
    },
    "/admin/": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get admin dashboard data",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved admin dashboard data"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands": {
      "get": {
        "tags": [
          "Admin-Brands"
        ],
        "description": "Get all brands",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all brands"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Admin-Brands"
        ],
        "description": "Create a new brand",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a new brand"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands/edit": {
      "post": {
        "tags": [
          "Admin-Brands"
        ],
        "description": "Edit an existing brand",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editBrand"
            }
          },
          {
            "name": "BrandId",
            "in": "path",
            "description": "ID number of a specific brand",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the brand"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands/delete": {
      "post": {
        "tags": [
          "Admin-Brands"
        ],
        "description": "Delete an existing brand",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "BrandId",
            "in": "path",
            "description": "ID number of a specific brand",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "BrandId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the brand"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "tags": [
          "Admin-Categories"
        ],
        "description": "Get all categories",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all categories"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Admin-Categories"
        ],
        "description": "Create a new category",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a new category"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories/edit": {
      "post": {
        "tags": [
          "Admin-Categories"
        ],
        "description": "Edit an existing category",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editCategory"
            }
          },
          {
            "name": "CategoryId",
            "in": "path",
            "description": "ID number of a specific category",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the category"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories/delete": {
      "post": {
        "tags": [
          "Admin-Categories"
        ],
        "description": "Delete an existing category",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "CategoryId",
            "in": "path",
            "description": "ID number of a specific category",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "CategoryId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the category"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products": {
      "get": {
        "tags": [
          "Admin-Products"
        ],
        "description": "Get all products",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all products"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Admin-Products"
        ],
        "description": "Create a new product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a new product"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products/edit": {
      "post": {
        "tags": [
          "Admin-Products"
        ],
        "description": "Edit an existing product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editProduct"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID number of a specific product",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the product"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products/delete": {
      "post": {
        "tags": [
          "Admin-Products"
        ],
        "description": "Soft delete an existing product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID number of a specific product",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the product"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "tags": [
          "Admin-Orders"
        ],
        "description": "Get all orders",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all orders"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/orders/edit": {
      "post": {
        "tags": [
          "Admin-Orders"
        ],
        "description": "Edit an existing order status",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/editOrder"
            }
          },
          {
            "name": "OrderId",
            "in": "path",
            "description": "ID number of a specific order",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited the orders status"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin-Users"
        ],
        "description": "Get all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Admin Only! Bearer token to authorize the request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/membership/": {
      "get": {
        "tags": [
          "Membership"
        ],
        "description": "Get user and membership information as well as previous orders",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer token to authorize the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID number of a specific user",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user information"
          },
          "400": {
            "description": "Fail! Something went wrong"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "loginInfo": {
      "type": "object",
      "properties": {
        "EmailorUsername": {
          "type": "string",
          "example": "'sample@sample.com'/'johnDoe'"
        },
        "Password": {
          "type": "string",
          "example": "123456"
        }
      },
      "required": [
        "EmailorUsername",
        "Password"
      ]
    },
    "signupInfo": {
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string",
          "example": "John"
        },
        "LastName": {
          "type": "string",
          "example": "Doe"
        },
        "Username": {
          "type": "string",
          "example": "johnDoe"
        },
        "Password": {
          "type": "string",
          "example": "123456"
        },
        "Address": {
          "type": "string",
          "example": "somewhere, earth"
        },
        "Email": {
          "type": "string",
          "example": "sample@sample.com"
        },
        "Telephone": {
          "type": "string",
          "example": "00123456789"
        }
      },
      "required": [
        "FirstName",
        "LastName",
        "Username",
        "Password",
        "Address",
        "Email",
        "Telephone"
      ]
    },
    "createBrand": {
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string",
          "example": "Example Brand"
        }
      },
      "required": [
        "Brand"
      ]
    },
    "editBrand": {
      "type": "object",
      "properties": {
        "NewBrand": {
          "type": "string",
          "example": "Edited Brand"
        }
      },
      "required": [
        "NewBrand"
      ]
    },
    "createCategory": {
      "type": "object",
      "properties": {
        "Category": {
          "type": "string",
          "example": "Example Category"
        }
      },
      "required": [
        "Category"
      ]
    },
    "editCategory": {
      "type": "object",
      "properties": {
        "NewCategory": {
          "type": "string",
          "example": "Edited Category"
        }
      },
      "required": [
        "NewCategory"
      ]
    },
    "createProduct": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "example": "Product Example"
        },
        "Description": {
          "type": "string",
          "example": "Product description ...."
        },
        "UnitPrice": {
          "type": "number",
          "example": 15
        },
        "ImageURL": {
          "type": "string",
          "example": "http://images.restapi.co.za/products/product-apple-tv.png"
        },
        "Quantity": {
          "type": "number",
          "example": 5
        },
        "BrandName": {
          "type": "string",
          "example": "Example Brand"
        },
        "CategoryName": {
          "type": "string",
          "example": "Example Category"
        }
      },
      "required": [
        "Name",
        "Description",
        "UnitPrice",
        "ImageURL",
        "Quantity",
        "BrandName",
        "CategoryName"
      ]
    },
    "editProduct": {
      "type": "object",
      "properties": {
        "NewName": {
          "type": "string",
          "example": "Edited Product"
        },
        "NewDescription": {
          "type": "string",
          "example": "Edited Product description ...."
        },
        "NewUnitPrice": {
          "type": "number",
          "example": 15
        },
        "NewImageURL": {
          "type": "string",
          "example": "http://images.restapi.co.za/products/product-apple-tv.png"
        },
        "NewQuantity": {
          "type": "number",
          "example": 5
        },
        "NewBrandName": {
          "type": "string",
          "example": "Edited Brand"
        },
        "NewCategoryName": {
          "type": "string",
          "example": "Edited Category"
        }
      },
      "required": [
        "NewName",
        "NewDescription",
        "NewUnitPrice",
        "NewImageURL",
        "NewQuantity",
        "NewBrandName",
        "NewCategoryName"
      ]
    },
    "editOrder": {
      "type": "object",
      "properties": {
        "NewOrderStatusId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "NewOrderStatusId"
      ]
    },
    "searchProduct": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "example": "Product Name"
        },
        "brandName": {
          "type": "string",
          "example": "Brand Name"
        },
        "categoryName": {
          "type": "string",
          "example": "Category Name"
        }
      },
      "required": [
        "productName",
        "brandName",
        "categoryName"
      ]
    },
    "createCart": {
      "type": "object",
      "properties": {
        "Quantity": {
          "type": "number",
          "example": 5
        }
      },
      "required": [
        "Quantity"
      ]
    },
    "editCart": {
      "type": "object",
      "properties": {
        "NewQuantity": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "NewQuantity"
      ]
    }
  }
}